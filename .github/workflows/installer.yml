name: Installer

on:
  push:
    branches: [ "master", "qe3", "fix-ci" ]
  pull_request:
    branches: [ "master", "qe3", "fix-ci" ]

jobs:
  windows:
    name: Qt 6.7 / Windows
    runs-on: windows-2022
    steps:
      - name: Clone the repository
        uses: actions/checkout@v4
        with:
          submodules: true

#       - name: Cache libraries
#         id: cache-libs
#         uses: actions/cache@v3
#         with:
#           path: |
#             C:/openssl/bin/libssl-1_1-x64.dll
#             C:/openssl/bin/libcrypto-1_1-x64.dll
#             C:/Program Files/PostgreSQL/14/bin/libiconv-2.dll
#             C:/Program Files/PostgreSQL/14/bin/libintl-9.dll
#             C:/Program Files/PostgreSQL/14/bin/liblz4.dll
#             C:/Program Files/PostgreSQL/14/bin/zlib1.dll
#             C:/Program Files/PostgreSQL/14/bin/libpq.dll
#           key: ${{ runner.os }}-library-cache

      # - name: Get libraries
#         if: steps.cache-libs.outputs.cache-hit != 'true'
        # run: |
        #   choco install openssl.light --params "/InstallDir:C:\openssl" --version 1.1.1 -y
        #   choco install postgresql14 --version 14.5.1 -y
        # shell: cmd

      - name: Setup CMake
        uses: ./.github/actions/cmake
        with:
          qt_version: 6.7.2
          qt_arch: win64_mingw
          use_qt6: ON
          modules: qtserialport qtmultimedia
          additional_cmake_args: -DCMAKE_INSTALL_PREFIX='${{ github.workspace }}/install'

      - name: Build
        run: cmake --build '${{github.workspace}}/build' --parallel "$(nproc)"
        shell: bash

      - name: Install
        run: cmake --install '${{ github.workspace }}/build'
        shell: bash

      - name: Run windeployqt
        run: windeployqt -serialport -multimedia --qmldir '${{ github.workspace }}/install/bin/qml' '${{ github.workspace }}/install/bin/quickevent.exe'

      - name: Copy MinGW runtime libraries
        # windeployqt is unable to copy those, because it looks for them next to where g++.exe is. On the GitHub runner,
        # they are in a different directory.
        run: cp /mingw64/bin/{libstdc++-6.dll,libgcc_s_seh-1.dll,libwinpthread-1.dll} '${{ github.workspace }}/install/bin'
        shell: bash

      - name: Copy PostgreSQL runtime libraries
        run: |
          cd "C:/Program Files/PostgreSQL/14/bin"
          cp libiconv-2.dll libintl-9.dll liblz4.dll zlib1.dll libpq.dll '${{ github.workspace }}/install/bin/'
          cd "C:\openssl"
          cp libssl-1_1-x64.dll libcrypto-1_1-x64.dll '${{ github.workspace }}/install/bin/'
        shell: bash

      - name: Get app version
        run: echo "VERSION=$(grep APP_VERSION quickevent/app/quickevent/src/appversion.h | cut -d\" -f2)" >> "$GITHUB_ENV"
        shell: bash

      - name: Create installer
        run: iscc "-DBUILD_DIR=${{ github.workspace }}/install" "-DVERSION=${{ env.VERSION }}" quickevent/quickevent.iss

      - name: Upload installer
        uses: actions/upload-artifact@v3
        with:
          name: quickevent-${{ env.VERSION }}-setup.exe
          path: ${{ github.workspace }}/install/_inno/quickevent/quickevent-*-setup.exe
